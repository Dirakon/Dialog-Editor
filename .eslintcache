[{"/home/dirakon/jsProjects/dialogEditor/src/index.js":"1","/home/dirakon/jsProjects/dialogEditor/src/App.js":"2","/home/dirakon/jsProjects/dialogEditor/src/components/DraftTextEditor.js":"3","/home/dirakon/jsProjects/dialogEditor/src/components/MyEditor.jsx":"4","/home/dirakon/jsProjects/dialogEditor/src/components/SubcribableEvent.js":"5","/home/dirakon/jsProjects/dialogEditor/src/components/DividerBar.jsx":"6","/home/dirakon/jsProjects/dialogEditor/src/components/DialogSide.jsx":"7","/home/dirakon/jsProjects/dialogEditor/src/components/DialogEngine.js":"8","/home/dirakon/jsProjects/dialogEditor/src/components/ContextInfo.js":"9","/home/dirakon/jsProjects/dialogEditor/src/components/DialogInterpeter.js":"10","/home/dirakon/jsProjects/dialogEditor/src/components/DialogUtils.js":"11","/home/dirakon/jsProjects/dialogEditor/src/components/IndentationMaster.js":"12","/home/dirakon/jsProjects/dialogEditor/src/components/DialogVariable.js":"13"},{"size":223,"mtime":1635450557794,"results":"14","hashOfConfig":"15"},{"size":3095,"mtime":1637611142442,"results":"16","hashOfConfig":"15"},{"size":5973,"mtime":1637515831569,"results":"17","hashOfConfig":"15"},{"size":1876,"mtime":1637522754313,"results":"18","hashOfConfig":"15"},{"size":442,"mtime":1637515112581,"results":"19","hashOfConfig":"15"},{"size":563,"mtime":1637517011219,"results":"20","hashOfConfig":"15"},{"size":995,"mtime":1637522060895,"results":"21","hashOfConfig":"15"},{"size":3185,"mtime":1637609829558,"results":"22","hashOfConfig":"15"},{"size":754,"mtime":1637610629327,"results":"23","hashOfConfig":"15"},{"size":13860,"mtime":1637611306343,"results":"24","hashOfConfig":"15"},{"size":2077,"mtime":1637609696610,"results":"25","hashOfConfig":"15"},{"size":1041,"mtime":1637609736298,"results":"26","hashOfConfig":"15"},{"size":1197,"mtime":1637608042549,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1wbcdls",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/home/dirakon/jsProjects/dialogEditor/src/index.js",[],["60","61"],"/home/dirakon/jsProjects/dialogEditor/src/App.js",["62"],"/home/dirakon/jsProjects/dialogEditor/src/components/DraftTextEditor.js",[],"/home/dirakon/jsProjects/dialogEditor/src/components/MyEditor.jsx",["63"],"import DraftTextEditor from \"./DraftTextEditor\";\nimport React from \"react\";\nimport EditorState from \"draft-js/lib/EditorState\";\nimport DialogEngine from \"./DialogEngine\";\nimport SubscribableEvent from \"./SubcribableEvent\";\nimport DividerBar from \"./DividerBar\";\nimport DialogSide from \"./DialogSide\";\n\nfunction MyEditor(props) {\n    let editorState;\n    let dialogEngine = new DialogEngine()\n    let onProhibitSelectionStateChanged = new SubscribableEvent(),onDividerMoved = new SubscribableEvent(), onDialogChanged = new SubscribableEvent(),\n    onOptionsChanged = new SubscribableEvent(), onOptionClicked = new SubscribableEvent();\n    function compileButtonClicked() {\n        dialogEngine.compile(editorState.getCurrentContent().getPlainText('\\u0001'));\n        onDialogChanged.Start(dialogEngine.getText())\n        onOptionsChanged.Start(dialogEngine.getOptions())\n    }\n    onOptionClicked.Subscribe((chosenOption)=>{\n        dialogEngine.chooseOption(chosenOption)\n        onDialogChanged.Start(dialogEngine.getText())\n        onOptionsChanged.Start(dialogEngine.getOptions())\n    })\n    return <div style={{ height: '100%' }}>\n        <div className={'horizontalDialogLayout'}>\n            <DraftTextEditor defaultDialog={props.defaultDialog} setEditorState={(t) => editorState = t}  onDividerMoved = {onDividerMoved} onProhibitSelectionStateChanged = {onProhibitSelectionStateChanged}/>\n            <DividerBar onProhibitSelectionStateChanged = {onProhibitSelectionStateChanged} onDividerMoved = {onDividerMoved} />\n            <DialogSide onProhibitSelectionStateChanged = {onProhibitSelectionStateChanged} onDialogChanged = {onDialogChanged} onOptionsChanged = {onOptionsChanged} onOptionClicked={onOptionClicked} />\n        </div>\n\n        <button className={'compileButton'} onClick={compileButtonClicked}> Compile!</button>\n    </div>\n}\n\nexport default MyEditor;","/home/dirakon/jsProjects/dialogEditor/src/components/SubcribableEvent.js",[],"/home/dirakon/jsProjects/dialogEditor/src/components/DividerBar.jsx",[],"/home/dirakon/jsProjects/dialogEditor/src/components/DialogSide.jsx",[],"/home/dirakon/jsProjects/dialogEditor/src/components/DialogEngine.js",["64","65","66","67","68","69","70","71","72"],"import ContextInfo from \"./ContextInfo\";\nimport { interpretOneLine, PROGRAM_HALTED, UP_X_LEVELS, SEEK_FOR_NEXT_ELSE, getNextLineFromProgramStatus, GO_TO_NEXT_LINE, locateLineXLevelsUp,locateLineWithNextElse } from \"./DialogInterpeter\";\nimport { SYMBOL_NOT_FOUND_FLAG, formatCodeToBrowserStyle } from \"./DialogUtils\";\nimport IndentationMaster from \"./IndentationMaster\";\n\nclass DialogEngine {\n    compile(code) {\n        this.setToInitialState(formatCodeToBrowserStyle(code))\n        let firstLine = this.getLineWithFirstLeftBracket();\n        if (firstLine == SYMBOL_NOT_FOUND_FLAG) {\n            //Did not find the first left bracket...\n            throw(\"You are missing the first left bracket! Code is incorrect.\")\n        }\n        this.process(firstLine+1);\n    }\n\n    setToInitialState(code) {\n        this.code = code.split('\u0001');\n        this.curLine = 0;\n        this.tags = [];\n        this.vars = {};\n        this.saves = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; // 10 saves\n    }\n\n    getLineWithFirstLeftBracket() {\n        for (let lineIndex = 0; lineIndex < this.code.length; ++lineIndex) {\n            let bracketIndex = this.code[lineIndex].indexOf('(')\n            if (bracketIndex !== SYMBOL_NOT_FOUND_FLAG)\n                return lineIndex\n        }\n        return SYMBOL_NOT_FOUND_FLAG\n    }\n\n\n    process(line) {\n        this.text = \"\";\n        this.options = [];\n        let context = new ContextInfo(line + 1, this.vars, this.tags, this.saves)\n        let programStatus = GO_TO_NEXT_LINE\n        while (context.indentationLevel !== 0) {\n            let { newOptions, newText, programStatus:newProgramStatus, programStatusDescriptor } = interpretOneLine(this.code[context.currentLine], context, programStatus)\n            programStatus = newProgramStatus\n            if (newText !== undefined)\n                this.text = newText\n            this.options = [...this.options, ...newOptions]\n            if (programStatus == PROGRAM_HALTED) {\n                break;\n            } else if (programStatus == UP_X_LEVELS) {\n                context.currentLine = locateLineXLevelsUp(this.code,programStatusDescriptor,context)\n                if (context.currentLine == SYMBOL_NOT_FOUND_FLAG){\n                    throw(\"Cannot locate line with specified amount of levels of indentation up\")\n                }\n            } else if (programStatus == SEEK_FOR_NEXT_ELSE) {\n                let lineWithElse = locateLineWithNextElse(this.code,context)\n                if (lineWithElse == SYMBOL_NOT_FOUND_FLAG)\n                    context.currentLine = getNextLineFromProgramStatus(GO_TO_NEXT_LINE,undefined,context.currentLine)\n                else\n                    context.currentLine = lineWithElse\n            }else{\n                context.currentLine = getNextLineFromProgramStatus(programStatus,programStatusDescriptor, context.currentLine)\n            }\n        }\n    }\n\n    getText() {\n        return this.text;\n    }\n\n    getOptions() {\n        return this.options.map(option => option[0]);\n    }\n\n    chooseOption(optionIndex) {\n        this.curLine = this.options[optionIndex][1];\n        this.process(this.curLine);\n    }\n\n}\n\nexport default DialogEngine;\n\n","/home/dirakon/jsProjects/dialogEditor/src/components/ContextInfo.js",[],"/home/dirakon/jsProjects/dialogEditor/src/components/DialogInterpeter.js",["73","74","75","76","77","78","79","80","81","82","83","84"],"/home/dirakon/jsProjects/dialogEditor/src/components/DialogUtils.js",["85","86","87","88","89","90"],"\nexport const SYMBOL_NOT_FOUND_FLAG = -1;\n\nexport function readFromPointToDot(line, charId) {    //Returns {str:string we were looking for, charId: new char id}\n    let lineWithoutUserStrings = replaceUserStringsWithSafeCharacters(line)\n    let noStringLineFromThePoint = lineWithoutUserStrings.substr(charId)\n    let indexOfDotInNewLine = noStringLineFromThePoint.indexOf('.')\n    let desiredString;\n    if (indexOfDotInNewLine == SYMBOL_NOT_FOUND_FLAG) {\n        desiredString = line.substring(charId)\n    } else {\n        desiredString = line.substring(charId, charId+indexOfDotInNewLine)\n    }\n    return { str: desiredString, charId: charId + desiredString.length }\n}\nexport function replaceAllInString(string,elementOld,elementNew){\n    return string.split(elementOld).join(elementNew);\n}\nexport function removeElementFromArray(elem,array){\n    return array.filter(el=>el!=elem)\n}\n\nexport function getQuoteWithoutQuotationMarks(string){\n    return string.substr(1,string.length-2)\n}\nexport function formatCodeToBrowserStyle(code) {\n    return replaceAllInString(code,'\\\\n', '<br>')\n}\nexport function getLineWithoutComments(line){\n    let noUserStringsLine = replaceUserStringsWithSafeCharacters(line)\n    let indexOfCommentStart = noUserStringsLine.indexOf('//')\n    if (indexOfCommentStart == SYMBOL_NOT_FOUND_FLAG){\n        return line\n    }else{\n        return line.substr(0,indexOfCommentStart)\n    }\n}\n\nconst safeCharacter = 'a'\nexport function replaceUserStringsWithSafeCharacters(line) {\n    if (characterCountInString(line,'\"') % 2 != 0)\n        throw (\"string not closed in the following line: \" + line)\n    let newLine = \"\"\n    let currentlyInUserString = false\n    for (let character of line) {\n        if (character == '\"') {\n            newLine += safeCharacter\n            currentlyInUserString = !currentlyInUserString\n        } else {\n            newLine += currentlyInUserString ? safeCharacter : character;\n        }\n    }\n    return newLine\n}\n\nexport function characterCountInString(character, string) {\n    return string.split(character).length - 1\n}\n","/home/dirakon/jsProjects/dialogEditor/src/components/IndentationMaster.js",["91"],"import { characterCountInString, replaceAllInString } from \"./DialogUtils\"\n\nclass IndentationMaster {\n    constructor(context) {\n        this.context = context\n    }\n    analyzeLineAndRemoveIndentationCharacters(line) {\n        line = line.trim()\n        if (line.startsWith('(') || line.startsWith(')')) {\n            let amountOfOpeningBrackets = characterCountInString('(', line)\n            let amountOfClosingBrackets = characterCountInString(')', line)\n            this.context.indentationLevel += amountOfOpeningBrackets\n            this.context.indentationLevel -= amountOfClosingBrackets\n            while (this.context.maxIndentationLevel > 1 && amountOfClosingBrackets != 0) {\n                this.context.maxIndentationLevel--;\n                amountOfClosingBrackets--;\n            }\n            line = replaceAllInString(replaceAllInString(line,'(', ''),')', '')\n        }\n        return line\n    }\n    canWeWorkInCurrentLine() {\n        return this.context.indentationLevelIsInReach()\n    }\n}\n\nexport default IndentationMaster","/home/dirakon/jsProjects/dialogEditor/src/components/DialogVariable.js",["92"],"import { getQuoteWithoutQuotationMarks } from \"./DialogUtils\"\n\nclass DialogConstant{\n    constructor (value){\n        this.value=value\n    }\n    getValue(){\n        return this.value\n    }\n    assignValue(newValue){\n        throw(\"Trying to assign value to constant!\")\n    }\n    \n}\n\nclass DialogVariable{\n    constructor (varName,varDictionary){\n        this.varName=varName\n        this.varDictionary=varDictionary\n    }\n    getValue(){\n        return this.varDictionary[this.varName]\n    }\n    assignValue(newValue){\n        this.varDictionary[this.varName] = newValue\n    }\n    \n}\n\nexport function stringToVariable(string,varDictionary){\n    if (string.startsWith('\"')){\n        return makeVariableOfDynamicType(getQuoteWithoutQuotationMarks(string),varDictionary)\n    }else{\n        return makeVariableOutOfConstant(string)\n    }\n}\n\nfunction makeVariableOutOfConstant(string){\n    return new DialogConstant(parseInt(string))\n}\n\nfunction makeVariableOfDynamicType(varName, variableDictionary){\n    if (!variableDictionary.hasOwnProperty(varName)){\n        variableDictionary[varName] = undefined\n    }\n    return new DialogVariable(varName,variableDictionary)\n}\n\n//export default DialogVariable",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":23},{"ruleId":"97","severity":1,"message":"101","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":10,"column":23,"nodeType":"105","messageId":"106","endLine":10,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":12,"column":13,"nodeType":"109","messageId":"110","endLine":12,"endColumn":80},{"ruleId":"103","severity":1,"message":"104","line":46,"column":31,"nodeType":"105","messageId":"106","endLine":46,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":48,"column":38,"nodeType":"105","messageId":"106","endLine":48,"endColumn":40},{"ruleId":"103","severity":1,"message":"104","line":50,"column":41,"nodeType":"105","messageId":"106","endLine":50,"endColumn":43},{"ruleId":"107","severity":1,"message":"108","line":51,"column":21,"nodeType":"109","messageId":"110","endLine":51,"endColumn":98},{"ruleId":"103","severity":1,"message":"104","line":53,"column":38,"nodeType":"105","messageId":"106","endLine":53,"endColumn":40},{"ruleId":"103","severity":1,"message":"104","line":55,"column":34,"nodeType":"105","messageId":"106","endLine":55,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":14,"column":13,"nodeType":"109","messageId":"110","endLine":14,"endColumn":143},{"ruleId":"103","severity":1,"message":"104","line":42,"column":52,"nodeType":"105","messageId":"106","endLine":42,"endColumn":54},{"ruleId":"103","severity":1,"message":"111","line":56,"column":60,"nodeType":"105","messageId":"106","endLine":56,"endColumn":62},{"ruleId":"112","severity":1,"message":"113","line":66,"column":60,"nodeType":"114","messageId":"115","endLine":66,"endColumn":61,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":66,"column":64,"nodeType":"114","messageId":"115","endLine":66,"endColumn":65,"suggestions":"117"},{"ruleId":"112","severity":1,"message":"113","line":66,"column":68,"nodeType":"114","messageId":"115","endLine":66,"endColumn":69,"suggestions":"118"},{"ruleId":"112","severity":1,"message":"113","line":66,"column":72,"nodeType":"114","messageId":"115","endLine":66,"endColumn":73,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"113","line":66,"column":81,"nodeType":"114","messageId":"115","endLine":66,"endColumn":82,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"113","line":66,"column":85,"nodeType":"114","messageId":"115","endLine":66,"endColumn":86,"suggestions":"121"},{"ruleId":"103","severity":1,"message":"104","line":195,"column":37,"nodeType":"105","messageId":"106","endLine":195,"endColumn":39},{"ruleId":"103","severity":1,"message":"111","line":199,"column":37,"nodeType":"105","messageId":"106","endLine":199,"endColumn":39},{"ruleId":"107","severity":1,"message":"108","line":207,"column":13,"nodeType":"109","messageId":"110","endLine":207,"endColumn":50},{"ruleId":"103","severity":1,"message":"104","line":9,"column":29,"nodeType":"105","messageId":"106","endLine":9,"endColumn":31},{"ruleId":"103","severity":1,"message":"111","line":20,"column":31,"nodeType":"105","messageId":"106","endLine":20,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":32,"column":29,"nodeType":"105","messageId":"106","endLine":32,"endColumn":31},{"ruleId":"103","severity":1,"message":"111","line":41,"column":46,"nodeType":"105","messageId":"106","endLine":41,"endColumn":48},{"ruleId":"107","severity":1,"message":"108","line":42,"column":9,"nodeType":"109","messageId":"110","endLine":42,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":46,"column":23,"nodeType":"105","messageId":"106","endLine":46,"endColumn":25},{"ruleId":"103","severity":1,"message":"111","line":14,"column":84,"nodeType":"105","messageId":"106","endLine":14,"endColumn":86},{"ruleId":"107","severity":1,"message":"108","line":11,"column":9,"nodeType":"109","messageId":"110","endLine":11,"endColumn":53},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'DraftTextEditor' is defined but never used.","Identifier","unusedVar","'EditorState' is defined but never used.","'IndentationMaster' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","Expected '!==' and instead saw '!='.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["124","125"],["126","127"],["128","129"],["130","131"],["132","133"],["134","135"],"no-global-assign","no-unsafe-negation",{"messageId":"136","fix":"137","desc":"138"},{"messageId":"139","fix":"140","desc":"141"},{"messageId":"136","fix":"142","desc":"138"},{"messageId":"139","fix":"143","desc":"141"},{"messageId":"136","fix":"144","desc":"138"},{"messageId":"139","fix":"145","desc":"141"},{"messageId":"136","fix":"146","desc":"138"},{"messageId":"139","fix":"147","desc":"141"},{"messageId":"136","fix":"148","desc":"138"},{"messageId":"139","fix":"149","desc":"141"},{"messageId":"136","fix":"150","desc":"138"},{"messageId":"139","fix":"151","desc":"141"},"removeEscape",{"range":"152","text":"153"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"154","text":"155"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"156","text":"153"},{"range":"157","text":"155"},{"range":"158","text":"153"},{"range":"159","text":"155"},{"range":"160","text":"153"},{"range":"161","text":"155"},{"range":"162","text":"153"},{"range":"163","text":"155"},{"range":"164","text":"153"},{"range":"165","text":"155"},[2712,2713],"",[2712,2712],"\\",[2716,2717],[2716,2716],[2720,2721],[2720,2720],[2724,2725],[2724,2724],[2733,2734],[2733,2733],[2737,2738],[2737,2737]]