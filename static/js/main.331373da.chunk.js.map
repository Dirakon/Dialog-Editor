{"version":3,"sources":["components/draftTextEditor.js","DialogAnalyzer.js","App.js","reportWebVitals.js","index.js"],"names":["rem","DialogAnalyzer","props","this","EXIT","DUNFORGET","REMEMBER","ADDTAG","VAR","ELSE","HASTAG","UP","DELETETAG","code","document","querySelector","split","curLine","tags","vars","saves","found","length","charId","process","line","text","options","sht","maxsht","seekingForElse","newOption","lch","push","operation","readFromPointToDot","txt","i","loadedSaveLine","parseInt","saveWhat","saveWhere","sign","variable","amount","pass","tag","num","discussedLine","option","ans","quotes","stateFromHTML","require","DraftTextEditor","state","editorState","EditorState","createWithText","sampleDialog","focus","refs","editor","onChange","setState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","contentState","createWithContent","button","editorCore","dialoger","addEventListener","event","clientX","style","width","toString","previousOptions","updateIt","remove","getOptions","papa","getElementsByClassName","element","createElement","innerHTML","remOption","chooseOption","appendChild","getText","compile","getCurrentContent","getPlainText","command","newState","RichUtils","e","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","className","hasText","getBlockMap","first","getType","onToggle","onClick","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","placeholder","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","type","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","App","height","draggable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.331373da.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Editor, EditorState, getDefaultKeyBinding, RichUtils} from 'draft-js';\r\nimport './RichText.css'\r\nimport DialogAnalyzer from '../DialogAnalyzer'\r\nlet rem;\r\nconst stateFromHTML = require('draft-js-import-html').stateFromHTML;\r\n\r\nclass DraftTextEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {editorState: EditorState.createWithText(sampleDialog)};\r\n\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.onChange = (editorState) => this.setState({editorState});\r\n\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n\r\n    getInitialState() {\r\n        let contentState = stateFromHTML('<p>Hello</p>');\r\n        return {\r\n            editorState: EditorState.createWithContent(contentState)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const button = document.querySelector('.compiler');\r\n        rem = this;\r\n        const editorCore = document.querySelector('.RichEditor-root')\r\n        //var DialogAnalyzer = require('../DialogAnalyzer').DialogAnalyzer;\r\n        const dialoger = new DialogAnalyzer();\r\n        document.addEventListener(\"drag\", function(event) {\r\n            if (event.clientX !== 0) {\r\n                editorCore.style.width = (event.clientX-32).toString() + 'px';\r\n            }\r\n        }, false);\r\n        let previousOptions = [];\r\n        const updateIt = function(){\r\n            for (let i = 0; i < previousOptions.length;++i){\r\n                previousOptions[i].remove();\r\n            }\r\n            previousOptions = [];\r\n            let options = dialoger.getOptions();\r\n            let papa =  document.getElementsByClassName(\"dialogSide\")[0]\r\n            for (let i = 0; i < options.length;++i){\r\n                let element = document.createElement(\"button\");\r\n                element.innerHTML=options[i][0];\r\n                const remOption = options[i];\r\n                element.addEventListener(\"click\",function () {\r\n                    dialoger.chooseOption(remOption);\r\n                    updateIt();\r\n                })\r\n                previousOptions.push(element);\r\n                papa.appendChild(element);\r\n            }\r\n            document.querySelector('.actualDialog').innerHTML= dialoger.getText();\r\n        }\r\n        button.addEventListener(\"click\", function () {\r\n            dialoger.compile(rem.state.editorState.getCurrentContent().getPlainText('\\u0001'))\r\n            updateIt();\r\n        });\r\n\r\n    }\r\n\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(\r\n                e,\r\n                this.state.editorState,\r\n                4, /* maxDepth */\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(\r\n            RichUtils.toggleBlockType(\r\n                this.state.editorState,\r\n                blockType\r\n            )\r\n        );\r\n    }\r\n\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n                this.state.editorState,\r\n                inlineStyle\r\n            )\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {editorState} = this.state;\r\n\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = 'RichEditor-editor';\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n                className += ' RichEditor-hidePlaceholder';\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"RichEditor-root\">\r\n                <BlockStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleBlockType}\r\n                />\r\n                <InlineStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleInlineStyle}\r\n                />\r\n                <div className={className} onClick={this.focus}>\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={styleMap}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Tell a story...\"\r\n                        ref=\"editor\"\r\n                        spellCheck={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case 'blockquote':\r\n            return 'RichEditor-blockquote';\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let className = 'RichEditor-styleButton';\r\n        if (this.props.active) {\r\n            className += ' RichEditor-activeButton';\r\n        }\r\n\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n              {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n    const {editorState} = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n        .getCurrentContent()\r\n        .getBlockForKey(selection.getStartKey())\r\n        .getType();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nconst sampleDialog = `\r\n\\t//What you see now is an example dialog!\r\n\r\n(\r\n\r\n\\t:\"Good day, sir actor!\"\r\n\\t\\\\\"Where am I?\"/\r\n\\t(\r\n\\t\\t:\"I would say that you are in the theatre. You won't hear more from me.\"\r\n\\t\\t\\\\\"...\"/\r\n\\t\\t(\r\n\\t\\t\\t:load.0\r\n\\t\\t)\r\n\\t)\r\n\\t\\\\\"Who am I?\"/\r\n\\t(\r\n\\t\\t:\"I already said that you, mister actor, are an actor. Why would you want to know more?\"\r\n\\t\\t\\\\\"...\"/\r\n\\t\\t(\r\n\\t\\t\\t:load.0\r\n\\t\\t)\r\n\\t)\r\n\\t\\\\\"Who are you?\"/\r\n\\t(\r\n\\t\\t:\"Wow, that's an interesting question... I'm the owner of this theatre. My name will be a mystery for now.\"\r\n\\t\\t\\\\\"...\"/\r\n\\t\\t(\r\n\\t\\t\\t:load.0\r\n\\t\\t)\r\n\\t)\r\n\\t\\\\\"Where is the exit here?\"/\r\n\\t(\r\n\\t\\t:\"There, first turn left.\"\r\n\\t\\t\\\\\"Thanks, now I will go\"/\r\n\\t\\t(\r\n\\t\\t\\t:exit\r\n\\t\\t)\r\n\\t\\t\\\\\"Alright, I'll remember that. You can continue now\"/\r\n\\t\\t(\r\n\\t\\t\\t:load.0\r\n\\t\\t)\r\n\\t)\r\n\\t:save.1.0\r\n\\t\\\\\"...\"/\r\n\\t(\r\n\\t\\t:\"Who do you want to play? I see real talent in you.\"\r\n\\t\\t:var.\"jobs\".=.0\r\n\\t\\t:hasTag.\"nonAustro\"\r\n\\t\\t(\r\n\\t\\t\\t:var.\"jobs\".+=.1\r\n\\t\\t)\r\n\\t\\t:else\r\n\\t\\t(\r\n\\t\\t\\\\\"I wouldn't mind being an astronaut\"/\r\n\\t\\t(\r\n\\t\\t\\t:\"I'm sorry but that role is already taken.\"\r\n\\t\\t\\t\\\\\"...\"/\r\n\\t\\t\\t(\r\n\\t\\t\\t\\t:addTag.\"nonAustro\"\r\n\\t\\t\\t\\t:up.3\r\n\\t\\t\\t)\r\n\\t\\t)\r\n\\t\\t)\r\n\\t\\t\r\n\\t\\t:hasTag.\"nonDragon\"\r\n\\t\\t(\r\n\\t\\t\\t:var.\"jobs\".+=.1\r\n\\t\\t)\r\n\\t\\t:else\r\n\\t\\t(\r\n\\t\\t\\\\\"Fantasy dragon please!\"/\r\n\\t\\t(\r\n\\t\\t\\t:\"I'm sorry but that role is already taken.\"\r\n\\t\\t\\t\\\\\"...\"/\r\n\\t\\t\\t(\r\n\\t\\t\\t\\t:addTag.\"nonDragon\"\r\n\\t\\t\\t\\t:up.3\r\n\\t\\t\\t)\r\n\\t\\t)\r\n\\t\\t)\r\n\\t\\t:hasTag.\"nonDetective\"\r\n\\t\\t(\r\n\\t\\t\\t:var.\"jobs\".+=.1\r\n\\t\\t)\r\n\\t\\t:else\r\n\\t\\t(\r\n\\t\\t\\\\\"I would like to play detective!\"/\r\n\\t\\t(\r\n\\t\\t\\t:\"I'm sorry but that role is already taken.\"\r\n\\t\\t\\t\\\\\"...\"/\r\n\\t\\t\\t(\r\n\\t\\t\\t\\t:addTag.\"nonDetective\"\r\n\\t\\t\\t\\t:up.3\r\n\\t\\t\\t)\r\n\\t\\t)\r\n\\t\\t)\r\n\\t\\t:var.\"jobs\".==.3\r\n\\t\\t(\r\n\\t\\t\\t\\\\\"WHO CAN I EVEN PLAY!?\"/\r\n\\t\\t\\t(\r\n\\t\\t\\t\\t:\"Hmmm... Let me check...\"\r\n\\t\\t\\t\\t\\t\\\\\"...\"/\r\n\\t\\t\\t\\t\\t(\r\n\\t\\t\\t\\t\\t\\t:\"Yes, I'm very sorry... Apparently, only one role is vacant...\"\r\n\\t\\t\\t\\t\\t\\t\\\\\"Which one???\"/\r\n\\t\\t\\t\\t\\t\\t(\r\n\\t\\t\\t\\t\\t\\t\\t:load.0\r\n\\t\\t\\t\\t\\t\\t)\r\n\\t\\t\\t\\t\\t\\t\\\\\"Tell me!\"/\r\n\\t\\t\\t\\t\\t\\t(\r\n\\t\\t\\t\\t\\t\\t\\t:load.0\r\n\\t\\t\\t\\t\\t\\t)\r\n\\t\\t\\t\\t\\t\\t:save.1.0\r\n\\t\\t\\t\\t\\t\\t\\\\\"Speak!!!\"/\r\n\\t\\t\\t\\t\\t\\t(\r\n\\t\\t\\t\\t\\t\\t\\t:\"Yes... A simple man.\"\r\n\\t\\t\\t\\t\\t\\t\\t\\t\\\\\"Huh?\"/\r\n\\t\\t\\t\\t\\t\\t\\t\\t(\r\n\\t\\t\\t//The game start here...\r\n\r\n:\"You wake up in your bed and stare into the rotten ceiling.\"\r\n\\\\I want to sleep just a little bit more.../\r\n(\r\n\\t:\"Unfortunately, you still have to wake up.\"\r\n\\t\\\\What a shame.../\r\n\\t(\r\n\\t\\t:up.2\r\n\\t)\r\n)\r\n\\\\\"What time is it?\"/\r\n(\r\n\\t:\" - you ask... You can't really hear an answer though.\"\r\n\\t\\\\I will tell them.../\r\n\\t(\r\n\\t\\t:up.2\r\n\\t)\r\n)\r\n\\\\Time to rise from the bed.../\r\n(\r\n\\t:exit\r\n)\r\n\\t\\t\\t//The game ends here...\r\n\\t\\t\\t\\t\\t\\t\\t\\t)\r\n\\t\\t\\t\\t\\t\\t)\r\n\\t\\t\\t\\t\\t)\r\n\\t\\t\\t)\r\n\\t\\t)\r\n\\t)\r\n)`\r\nexport default DraftTextEditor;\r\n","class DialogAnalyzer {\r\n    constructor(props) {\r\n        // OPERATIONS:\r\n        this.EXIT = \"exit\";\r\n        this.DUNFORGET = \"save\";\r\n        this.REMEMBER = \"load\";\r\n        this.ADDTAG = \"addTag\";\r\n        this.VAR = \"var\";\r\n        this.ELSE = \"else\";\r\n        this.HASTAG = \"hasTag\";\r\n        this.UP = \"up\";\r\n        this.DELETETAG = \"deleteTag\";\r\n    }\r\n\r\n    compile(code) {\r\n        const el = document.querySelector('.actDialog');\r\n        this.code = code.split('\u0001');\r\n        this.curLine = 0;\r\n        this.tags = {};\r\n        this.vars = {};\r\n        this.saves = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; // 10 saves\r\n        let found = false;\r\n        for (; this.curLine < this.code.length; ++this.curLine) {\r\n            for (let charId = 0; charId < this.code[this.curLine].length; ++charId) {\r\n                if (this.code[this.curLine][charId] === '(') {\r\n                    found = true;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if (found) {\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            //Some kind of error, dunno...\r\n        }\r\n        this.process(this.curLine);\r\n    }\r\n\r\n    process(line) {\r\n        this.text = \"\";\r\n        this.options = [];\r\n        line++;\r\n        let sht = 1, minsht = 1, maxsht = 1;\r\n        let seekingForElse = -1;\r\n        while (sht !== 0) {\r\n            if (seekingForElse > -1) {\r\n                seekingForElse--;\r\n            }\r\n            let charId = 0;\r\n            while (charId < this.code[line].length) {\r\n                if (this.code[line][charId] === '(') { //Visibility change\r\n                    sht++;\r\n                } else if (this.code[line][charId] === ')') {   //Visibility change\r\n                    if (maxsht !== 1 && ((sht < minsht || sht > maxsht)) === false) {\r\n                        maxsht--;\r\n                    } else if (seekingForElse === -2 && (sht < minsht || sht > maxsht) === true) {\r\n                        seekingForElse = 2;\r\n                    }\r\n                    sht--;\r\n                } else if (sht < minsht || sht > maxsht) {   //Out of our visibility\r\n                    ++charId;\r\n                    continue;\r\n                } else if (this.code[line][charId] === '\\\\') {   //Option\r\n                    charId++;\r\n                    let newOption = \"\";\r\n                    for (let lch = charId; lch < this.code[line].length; ++lch) {\r\n                        if (this.code[line][lch] === '/') {\r\n                            break;\r\n                        }\r\n                        newOption += this.code[line][lch];\r\n                    }\r\n                    this.options.push([newOption, line + 1])\r\n                    break;\r\n                } else if (this.code[line][charId] === ':') {   //Some operation\r\n                    charId++;\r\n                    let operation = this.readFromPointToDot(this.code[line], charId);\r\n                    charId = operation[1];\r\n                    operation = operation[0];\r\n                    if (operation === this.EXIT) {  //Exit the dialog operation.\r\n                        this.options = [];\r\n                        this.text = \"--EXITED THE DIALOG--\";\r\n                        return charId;\r\n                    } else if (operation[0] === '\"') {//That's THE text\r\n                        let txt = \"\";\r\n                        for (let i = 1; i < operation.length - 1; ++i) {\r\n                            txt += operation[i];\r\n                        }\r\n                        this.text = txt;\r\n                    } else if (operation === this.REMEMBER) {   //Load some point\r\n                        let loadedSaveLine = this.readFromPointToDot(this.code[line], charId)[0];\r\n                        this.process(this.saves[parseInt(loadedSaveLine)]);\r\n                        return;\r\n                    } else if (operation === this.DUNFORGET) {  //Save some point\r\n                        let saveWhat = this.readFromPointToDot(this.code[line], charId);  // 0 - str, 1 - charId\r\n                        charId = saveWhat[1];\r\n                        saveWhat = parseInt(saveWhat[0]);\r\n                        let saveWhere = this.readFromPointToDot(this.code[line], charId);  // 0 - str, 1 - charId\r\n                        charId = saveWhere[1];\r\n                        saveWhere = parseInt(saveWhere[0]);\r\n                        this.saves[saveWhere] = saveWhat + 1 + line;\r\n                    } else if (operation === this.VAR) {        //Working with variables\r\n                        let sign = this.readFromPointToDot(this.code[line], charId);\r\n                        charId = sign[1];\r\n                        sign = sign[0];\r\n                        let variable = \"\"\r\n                        for (let i = 1; i < sign.length - 1; ++i) {\r\n                            variable += sign[i];\r\n                        }\r\n                        sign = this.readFromPointToDot(this.code[line], charId);\r\n                        charId = sign[1];\r\n                        sign = sign[0];\r\n                        let amount = this.readFromPointToDot(this.code[line], charId);\r\n                        charId = amount[1];\r\n                        amount = parseInt(amount[0]);\r\n                        if (sign === \"=\") {\r\n                            this.vars[variable] = amount;\r\n                        } else if (sign === \"+=\") {\r\n                            this.vars[variable]+=amount;\r\n                        } else {\r\n                            let pass = false;\r\n                            if (sign === \"==\") {\r\n                                pass = this.vars[variable] === amount;\r\n                            } else if (sign === \">=\") {\r\n                                pass = this.vars[variable] >= amount;\r\n                            } else if (sign === \"!=\") {\r\n                                pass = this.vars[variable] !== amount;\r\n                            } else if (sign === \"<=\") {\r\n                                pass = this.vars[variable] <= amount;\r\n                            } else if (sign === \"<\") {\r\n                                pass = this.vars[variable] < amount;\r\n                            } else if (sign === \">\") {\r\n                                pass = this.vars[variable] < amount;\r\n                            }\r\n                            if (pass) {\r\n                                maxsht++;\r\n                            } else {\r\n                                seekingForElse = -2;\r\n                            }\r\n                        }\r\n                    } else if (operation === this.ADDTAG) {\r\n                        let tag = this.readFromPointToDot(this.code[line], charId);\r\n                        charId = tag[1];\r\n                        tag = tag[0];\r\n                        this.tags[tag]=true;\r\n                    } else if (operation === this.DELETETAG) {\r\n                        let tag = this.readFromPointToDot(this.code[line], charId);\r\n                        charId = tag[1];\r\n                        tag = tag[0];\r\n                        this.tags[tag] = false;\r\n                    }\r\n                     else if (operation === this.HASTAG) {\r\n                        let tag = this.readFromPointToDot(this.code[line], charId);\r\n                        charId = tag[1];\r\n                        tag = tag[0];\r\n                        if (!(tag in this.tags) || this.tags[tag] === false ) {\r\n                            seekingForElse = -2;\r\n                        } else {\r\n                            maxsht++;\r\n                        }\r\n                    } else if (operation === this.UP) {\r\n                        let num = this.readFromPointToDot(this.code[line], charId);\r\n                        charId = num[1];\r\n                        num = parseInt(num[0])\r\n                        let discussedLine = line - 1;\r\n                        sht = -1;\r\n                        while (sht !== num) {\r\n                            for (let lch = 0; lch < this.code[discussedLine].length; ++lch) {\r\n                                if (this.code[discussedLine][lch] === ' ' || this.code[discussedLine][lch] === '\\t' || this.code[discussedLine][lch] === '\\n') {\r\n                                    continue;\r\n                                }\r\n                                if (this.code[discussedLine][lch] === '(') {\r\n                                    sht++;\r\n                                } else if (this.code[discussedLine][lch] === ')') {\r\n                                    sht--;\r\n                                } else {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            discussedLine--;\r\n                        }\r\n                        return this.process(discussedLine + 1);\r\n                    } else if (operation === this.ELSE && seekingForElse > -1) {\r\n                        seekingForElse = -1;\r\n                        maxsht++;\r\n                    }\r\n                    break;\r\n                }\r\n                ++charId;\r\n            }\r\n            ++line;\r\n        }\r\n    }\r\n\r\n    getText() {\r\n        return this.text;\r\n    }\r\n\r\n    getOptions() {  // [options] where one option is [string, lineNum]\r\n        return this.options;\r\n    }\r\n\r\n    chooseOption(option) {\r\n        this.curLine = option[1];\r\n        this.process(this.curLine);\r\n    }\r\n\r\n    readFromPointToDot(line, charId) {    //Returns [string we were looking for,new char id]\r\n        let ans = \"\";\r\n        let quotes = false;\r\n        while (charId < line.length) {\r\n            if (line[charId] === '\"') {\r\n                quotes = !quotes;\r\n            }\r\n            if (quotes) {\r\n                if (line[charId] === '\\\\' && line.length - 1 !== charId && line[charId + 1] === 'n') { //New line when writing dialogs\r\n                    charId += 2;\r\n                    ans += '<br>';\r\n                    continue;\r\n                }\r\n            } else if (line[charId] === '.') {\r\n                return [ans, charId + 1];\r\n            }\r\n            ans += line[charId];\r\n            ++charId;\r\n        }\r\n        return [ans, charId + 1];\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DialogAnalyzer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport DraftTextEditor from './components/draftTextEditor'\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\" style={{height : '100%'}}>\r\n            <div style ={{height:'100%'}}>\r\n                <div className={'flexer'}>\r\n                    <DraftTextEditor/>\r\n                    <div className={'DIVIDER'} draggable={true}>\r\n                    </div>\r\n                    <div className={ 'dialogSide'}>\r\n                        <div className={'actualDialog'}>\r\n                        Dialog will be visible here!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className={'compiler'}> Compile!</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Editor, EditorState} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\r\nclass MyEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {editorState: EditorState.createEmpty()};\r\n        this.onChange = editorState => this.setState({editorState});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Editor editorState={this.state.editorState} onChange={this.onChange} />\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n//ReactDOM.render(<React.StrictMode><MyEditor /></React.StrictMode>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}