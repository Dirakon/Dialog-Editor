[{"/home/dirakon/jsProjects/dialogEditor/src/index.js":"1","/home/dirakon/jsProjects/dialogEditor/src/App.js":"2","/home/dirakon/jsProjects/dialogEditor/src/components/DraftTextEditor.js":"3","/home/dirakon/jsProjects/dialogEditor/src/components/MyEditor.jsx":"4","/home/dirakon/jsProjects/dialogEditor/src/components/DividerBar.jsx":"5","/home/dirakon/jsProjects/dialogEditor/src/components/DialogSide.jsx":"6","/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogEngine.js":"7","/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogInterpeter.js":"8","/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogUtils.js":"9","/home/dirakon/jsProjects/dialogEditor/src/scripts/ContextInfo.js":"10","/home/dirakon/jsProjects/dialogEditor/src/scripts/IndentationMaster.js":"11","/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogVariable.js":"12","/home/dirakon/jsProjects/dialogEditor/src/scripts/SubcribableEvent.js":"13","/home/dirakon/jsProjects/dialogEditor/src/scripts/FileLoader.js":"14"},{"size":223,"mtime":1635450557794,"results":"15","hashOfConfig":"16"},{"size":533,"mtime":1637700994893,"results":"17","hashOfConfig":"16"},{"size":5918,"mtime":1637618646505,"results":"18","hashOfConfig":"16"},{"size":1979,"mtime":1637699508540,"results":"19","hashOfConfig":"16"},{"size":563,"mtime":1637517011219,"results":"20","hashOfConfig":"16"},{"size":1049,"mtime":1637618518736,"results":"21","hashOfConfig":"16"},{"size":3635,"mtime":1637696780600,"results":"22","hashOfConfig":"16"},{"size":6968,"mtime":1637696779627,"results":"23","hashOfConfig":"16"},{"size":1447,"mtime":1637701252778,"results":"24","hashOfConfig":"16"},{"size":754,"mtime":1637696760279,"results":"25","hashOfConfig":"16"},{"size":1016,"mtime":1637696772904,"results":"26","hashOfConfig":"16"},{"size":1165,"mtime":1637696771891,"results":"27","hashOfConfig":"16"},{"size":317,"mtime":1637696775627,"results":"28","hashOfConfig":"16"},{"size":141,"mtime":1637700870421,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1wbcdls",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dirakon/jsProjects/dialogEditor/src/index.js",[],["64","65"],"/home/dirakon/jsProjects/dialogEditor/src/App.js",["66","67","68"],"/home/dirakon/jsProjects/dialogEditor/src/components/DraftTextEditor.js",[],"/home/dirakon/jsProjects/dialogEditor/src/components/MyEditor.jsx",["69","70"],"import DraftTextEditor from \"./DraftTextEditor\";\nimport React, { useEffect } from \"react\";\nimport EditorState from \"draft-js/lib/EditorState\";\nimport DialogEngine from \"../scripts/DialogEngine\";\nimport SubscribableEvent from \"../scripts/SubcribableEvent\";\nimport DividerBar from \"./DividerBar\";\nimport DialogSide from \"./DialogSide\";\n\nfunction MyEditor(props) {\n    let draftTextEditor;\n    let dialogEngine = new DialogEngine()\n    let onProhibitSelectionStateChanged = new SubscribableEvent(), onDividerMoved = new SubscribableEvent(), onDialogChanged = new SubscribableEvent(),\n        onOptionsChanged = new SubscribableEvent(), onOptionClicked = new SubscribableEvent();\n    function compileButtonClicked() {\n        dialogEngine.compile(draftTextEditor.state.editorState.getCurrentContent().getPlainText('\\u0001'));\n        onDialogChanged.Start(dialogEngine.getText())\n        onOptionsChanged.Start(dialogEngine.getOptions())\n    }\n    useEffect(() => {\n        onOptionClicked.Subscribe((chosenOption) => {\n            dialogEngine.chooseOption(chosenOption)\n            onDialogChanged.Start(dialogEngine.getText())\n            onOptionsChanged.Start(dialogEngine.getOptions())\n        })\n    }, [])\n    return <div style={{ height: '100%' }}>\n        <div className={'horizontalDialogLayout'}>\n            <DraftTextEditor defaultDialog={props.defaultDialog} setChild={(t) => draftTextEditor = t} onDividerMoved={onDividerMoved} onProhibitSelectionStateChanged={onProhibitSelectionStateChanged} />\n            <DividerBar onProhibitSelectionStateChanged={onProhibitSelectionStateChanged} onDividerMoved={onDividerMoved} />\n            <DialogSide onProhibitSelectionStateChanged={onProhibitSelectionStateChanged} onDialogChanged={onDialogChanged} onOptionsChanged={onOptionsChanged} onOptionClicked={onOptionClicked} />\n        </div>\n\n        <button className={'compileButton'} onClick={compileButtonClicked}> Compile!</button>\n    </div>\n}\n\nexport default MyEditor;","/home/dirakon/jsProjects/dialogEditor/src/components/DividerBar.jsx",[],"/home/dirakon/jsProjects/dialogEditor/src/components/DialogSide.jsx",["71"],"import { useState,useEffect } from \"react\";\nfunction DialogSide(props) {\n    let [selectionProhibited, setSelectionProhibited] = useState(false);\n    let [currentDialog, setCurrentDialog] = useState('Dialog will be visible here!');\n    let [currentOptions, setCurrentOptions] = useState([])\n    useEffect(() => {\n        props.onProhibitSelectionStateChanged.Subscribe(() => { setSelectionProhibited(!selectionProhibited) })\n        props.onOptionsChanged.Subscribe((newOptions) => { setCurrentOptions(newOptions) })\n        props.onDialogChanged.Subscribe((dialog) => { setCurrentDialog(dialog) })\n    }, [])\n    return <div className={selectionProhibited ? 'dialogSide prohibitSelection' : 'dialogSide'}>\n        <div className={'actualDialog'}>\n            {currentDialog}\n            {currentOptions.map((option, index) => <div key={index}>\n                <br />\n                <button key={index} onClick={() => props.onOptionClicked.Start(index)}>{option}</button>\n            </div>)}\n        </div>\n    </div>\n}\n\nexport default DialogSide;","/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogEngine.js",["72","73","74","75","76","77","78","79","80"],"import ContextInfo from \"./ContextInfo\";\nimport { interpretOneLine, PROGRAM_HALTED, UP_X_LEVELS, SEEK_FOR_NEXT_ELSE, getNextLineFromProgramStatus, GO_TO_NEXT_LINE, locateLineXLevelsUp, locateLineWithNextElse } from \"./DialogInterpeter\";\nimport { SYMBOL_NOT_FOUND_FLAG, formatCodeToBrowserStyle } from \"./DialogUtils\";\nimport IndentationMaster from \"./IndentationMaster\";\n\nclass DialogEngine {\n    compile(code) {\n        this.setToInitialState(formatCodeToBrowserStyle(code))\n        let firstLine = this.getLineWithFirstLeftBracket();\n        if (firstLine == SYMBOL_NOT_FOUND_FLAG) {\n            //Did not find the first left bracket...\n            throw (\"You are missing the first left bracket! Code is incorrect.\")\n        }\n        this.process(firstLine + 1);\n    }\n\n    setToInitialState(code) {\n        this.code = code.split('\u0001');\n        this.curLine = 0;\n        this.tags = [];\n        this.vars = {};\n        this.saves = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; // 10 saves\n    }\n\n    getLineWithFirstLeftBracket() {\n        for (let lineIndex = 0; lineIndex < this.code.length; ++lineIndex) {\n            let bracketIndex = this.code[lineIndex].indexOf('(')\n            if (bracketIndex !== SYMBOL_NOT_FOUND_FLAG)\n                return lineIndex\n        }\n        return SYMBOL_NOT_FOUND_FLAG\n    }\n\n\n    process(line) {\n        this.text = \"\";\n        this.options = [];\n        let context = new ContextInfo(line + 1, this.vars, this.tags, this.saves)\n        this.programStatus = GO_TO_NEXT_LINE\n        while (context.indentationLevel !== 0) {\n            let { newOptions, newText, programStatus: newProgramStatus, programStatusDescriptor } = interpretOneLine(this.code[context.currentLine], context, this.programStatus)\n            this.applyNewInformation(newProgramStatus, newText, newOptions);\n            if (this.programStatus == PROGRAM_HALTED) {\n                break;\n            } else if (this.programStatus == UP_X_LEVELS) {\n                this.goXLevelsUp(context, programStatusDescriptor);\n            } else if (this.programStatus == SEEK_FOR_NEXT_ELSE) {\n                this.goToNextElseOtherwiseNextLine(context);\n            } else {\n                context.currentLine = getNextLineFromProgramStatus(this.programStatus, programStatusDescriptor, context.currentLine)\n            }\n        }\n    }\n\n    applyNewInformation(newProgramStatus, newText, newOptions) {\n        this.programStatus = newProgramStatus;\n        if (newText !== undefined)\n            this.text = newText;\n        this.options = [...this.options, ...newOptions];\n    }\n\n    goToNextElseOtherwiseNextLine(context) {\n        let lineWithElse = locateLineWithNextElse(this.code, context);\n        this.programStatus = GO_TO_NEXT_LINE;\n        if (lineWithElse == SYMBOL_NOT_FOUND_FLAG)\n            context.currentLine = getNextLineFromProgramStatus(this.programStatus, undefined, context.currentLine);\n        else\n            context.currentLine = lineWithElse;\n    }\n\n    goXLevelsUp(context, programStatusDescriptor) {\n        context.currentLine = locateLineXLevelsUp(this.code, programStatusDescriptor, context);\n        this.programStatus = GO_TO_NEXT_LINE;\n        if (context.currentLine == SYMBOL_NOT_FOUND_FLAG) {\n            throw (\"Cannot locate line with specified amount of levels of indentation up\");\n        }\n    }\n\n    getText() {\n        return this.text;\n    }\n\n    getOptions() {\n        return this.options.map(option => option[0]);\n    }\n\n    chooseOption(optionIndex) {\n        this.curLine = this.options[optionIndex][1];\n        this.process(this.curLine);\n    }\n\n}\n\nexport default DialogEngine;\n\n","/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogInterpeter.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"import { getQuoteWithoutQuotationMarks, readFromPointToDot, removeElementFromArray, replaceAllInString } from \"./DialogUtils\";\nimport { SYMBOL_NOT_FOUND_FLAG, getLineWithoutComments } from \"./DialogUtils\";\nimport { stringToVariable } from \"./DialogVariable\";\nimport IndentationMaster from \"./IndentationMaster\";\n\nexport const PROGRAM_HALTED = -1, UP_X_LEVELS = -2, SEEK_FOR_NEXT_ELSE = -3, GO_TO_NEXT_LINE = -4, GO_TO_X_LINE = -5;\nexport function getNextLineFromProgramStatus(programStatus, programStatusDescriptor, currentLine) {\n    switch (programStatus) {\n        case GO_TO_NEXT_LINE:\n            return currentLine + 1\n        case GO_TO_X_LINE:\n            return programStatusDescriptor\n        default:\n            throw (\"getNextLineFromProgramStatus got program status that does not support getting the next line: \" + programStatus.toString())\n    }\n}\n\nconst operationNameToOperationFunction = {\n    'exit': exitOperation,\n    'save': saveOperation,\n    'load': loadOperation,\n    'addTag': addTagOperation,\n    'var': variableOperation,\n    'else': elseOperation,\n    'hasTag': hasTagOperation,\n    'up': upOperation,\n    'deleteTag': deleteTagOperation\n}\n\nconst linesToSeekForElseFor = 2\nexport function locateLineWithNextElse(lines, context) {\n    let indentationMaster = new IndentationMaster(context)\n    let linesToSeekForElseForLeft = linesToSeekForElseFor\n    let saveContext = context.getClone()\n    while (context.currentLine < lines.length) {\n        let line = indentationMaster.analyzeLineAndRemoveIndentationCharacters(getLineWithoutComments(lines[context.currentLine]))\n        if (indentationMaster.canWeWorkInCurrentLine()) {\n            if (line.startsWith(':else')) {\n                context.nextElseIsToExecute = true\n                return context.currentLine\n            } else if (linesToSeekForElseForLeft-- == 0) {\n                break;\n            }\n        }\n        context.currentLine++;\n    }\n    context.setToClone(saveContext)\n    return SYMBOL_NOT_FOUND_FLAG\n}\n\nexport function locateLineXLevelsUp(lines, howManyLevelsUp, context) {\n    context.indentationLevel = -howManyLevelsUp\n    let indentationMaster = new IndentationMaster(context)\n    while (context.currentLine > 0 && context.indentationLevel != 1) {\n        context.currentLine--;\n        indentationMaster.analyzeLineAndRemoveIndentationCharacters(getLineWithoutComments(lines[context.currentLine]))\n    }\n    context.maxIndentationLevel = 1\n    if (context.currentLine < 0)\n        return SYMBOL_NOT_FOUND_FLAG\n    else\n        return context.currentLine + 1\n}\n\nconst regexToSplitDotsOutsideOfQuotationMarks = /\\.(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*(?![^\\\"]*\\\"))/\nexport function interpretOneLine(line, context, programStatus) {\n    let programStatusDescriptor = 0\n    let indentationMaster = new IndentationMaster(context)\n    let newOptions = [], newText = undefined\n\n    line = indentationMaster.analyzeLineAndRemoveIndentationCharacters(getLineWithoutComments(line))\n    if (indentationMaster.canWeWorkInCurrentLine()) {\n        if (line.startsWith('\\\\')) { //option\n            let optionEnd = line.indexOf('/')\n            let newOption = line.substring(1, optionEnd);\n            newOptions.push([newOption, context.currentLine + 1])\n            programStatus = GO_TO_NEXT_LINE\n        } else if (line.startsWith(':\"')) { // text\n            newText = replaceAllInString(line, '\"', '').substring(1);\n            programStatus = GO_TO_NEXT_LINE\n        } else if (line.startsWith(':')) { //operation\n            let operationCall = line.substring(1, line.indexOf('.') == SYMBOL_NOT_FOUND_FLAG ? line.length : line.indexOf('.'))\n            let args = line.substr(operationCall.length + 2)\n                .split(regexToSplitDotsOutsideOfQuotationMarks);\n            ({ programStatus, programStatusDescriptor } = operationNameToOperationFunction[operationCall](args, context))\n        } else {\n            programStatus = GO_TO_NEXT_LINE\n        }\n    }\n    return { newOptions: newOptions, newText: newText, programStatus: programStatus, programStatusDescriptor: programStatusDescriptor }\n}\n\nfunction variableOperation(args, context) {\n    let var1 = stringToVariable(args[0], context.vars), sign = args[1], var2 = stringToVariable(args[2], context.vars)\n    if (sign === '=') {\n        var1.assignValue(var2.getValue())\n    } else if (sign === '+=') {\n        var1.assignValue(var1.getValue() + var2.getValue())\n    } else if (sign === '-=') {\n        var1.assignValue(var1.getValue() - var2.getValue())\n    } else {\n        let pass = applyLogicalOperationToVariables(var1, sign, var2);\n        if (pass) {\n            context.maxIndentationLevel++\n        } else {\n            return { programStatus: SEEK_FOR_NEXT_ELSE, programStatusDescriptor: undefined }\n        }\n    }\n    return { programStatus: GO_TO_NEXT_LINE, programStatusDescriptor: undefined }\n}\nfunction applyLogicalOperationToVariables(var1, sign, var2) {\n    switch (sign) {\n        case '==':\n            return var1.getValue() == var2.getValue();\n        case \">=\":\n            return var1.getValue() >= var2.getValue();\n        case \"!=\":\n            return var1.getValue() != var2.getValue();\n        case \"<=\":\n            return var1.getValue() <= var2.getValue();\n        case \"<\":\n            return var1.getValue() < var2.getValue();\n        case \">\":\n            return var1.getValue() > var2.getValue();\n        default:\n            throw ('unidentified sign: ' + sign);\n    }\n}\n\nfunction addTagOperation(args, context) {\n    context.tags.push(args[0])\n    return { programStatus: GO_TO_NEXT_LINE, programStatusDescriptor: undefined }\n}\nfunction deleteTagOperation(args, context) {\n    removeElementFromArray(args[0], context.tags)\n    return { programStatus: GO_TO_NEXT_LINE, programStatusDescriptor: undefined }\n}\nfunction hasTagOperation(args, context) {\n    if (context.tags.includes(args[0])) {\n        context.maxIndentationLevel += 1\n        return { programStatus: GO_TO_NEXT_LINE, programStatusDescriptor: undefined }\n    } else {\n        return { programStatus: SEEK_FOR_NEXT_ELSE, programStatusDescriptor: undefined }\n    }\n}\nfunction elseOperation(args, context) {\n    if (context.nextElseIsToExecute) {\n        context.nextElseIsToExecute = false\n        context.maxIndentationLevel += 1\n    }\n    return { programStatus: GO_TO_NEXT_LINE, programStatusDescriptor: undefined }\n}\nfunction loadOperation(args, context) {\n    return { programStatus: GO_TO_X_LINE, programStatusDescriptor: context.saves[parseInt(args[0])] }\n}\nfunction saveOperation(args, context) {\n    context.saves[parseInt(args[1])] = context.currentLine + parseInt(args[0])\n    return { programStatus: GO_TO_NEXT_LINE, programStatusDescriptor: undefined }\n}\nfunction upOperation(args, context) {\n    return { programStatus: UP_X_LEVELS, programStatusDescriptor: parseInt(args[0]) }\n}\nfunction exitOperation(args, context) {\n    return { programStatus: PROGRAM_HALTED, programStatusDescriptor: undefined }\n}\n","/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogUtils.js",["96","97","98","99","100"],"/home/dirakon/jsProjects/dialogEditor/src/scripts/ContextInfo.js",[],"/home/dirakon/jsProjects/dialogEditor/src/scripts/IndentationMaster.js",[],"/home/dirakon/jsProjects/dialogEditor/src/scripts/DialogVariable.js",["101"],"import { getQuoteWithoutQuotationMarks } from \"./DialogUtils\"\n\nclass DialogConstant{\n    constructor (value){\n        this.value=value\n    }\n    getValue(){\n        return this.value\n    }\n    assignValue(newValue){\n        throw(\"Trying to assign value to constant!\")\n    }\n    \n}\n\nclass DialogVariable{\n    constructor (varName,varDictionary){\n        this.varName=varName\n        this.varDictionary=varDictionary\n    }\n    getValue(){\n        return this.varDictionary[this.varName]\n    }\n    assignValue(newValue){\n        this.varDictionary[this.varName] = newValue\n    }\n    \n}\n\nexport function stringToVariable(string,varDictionary){\n    if (string.startsWith('\"')){\n        return makeVariableOfDynamicType(getQuoteWithoutQuotationMarks(string),varDictionary)\n    }else{\n        return makeVariableOutOfConstant(string)\n    }\n}\n\nfunction makeVariableOutOfConstant(string){\n    return new DialogConstant(parseInt(string))\n}\n\nfunction makeVariableOfDynamicType(varName, variableDictionary){\n    if (!variableDictionary.hasOwnProperty(varName)){\n        variableDictionary[varName] = undefined\n    }\n    return new DialogVariable(varName,variableDictionary)\n}\n","/home/dirakon/jsProjects/dialogEditor/src/scripts/SubcribableEvent.js",[],"/home/dirakon/jsProjects/dialogEditor/src/scripts/FileLoader.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":23},{"ruleId":"106","severity":1,"message":"111","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":28},{"ruleId":"106","severity":1,"message":"112","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":25,"column":8,"nodeType":"115","endLine":25,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":10,"column":8,"nodeType":"115","endLine":10,"endColumn":10,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"119","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":10,"column":23,"nodeType":"122","messageId":"123","endLine":10,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":12,"column":13,"nodeType":"126","messageId":"127","endLine":12,"endColumn":81},{"ruleId":"120","severity":1,"message":"121","line":43,"column":36,"nodeType":"122","messageId":"123","endLine":43,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":45,"column":43,"nodeType":"122","messageId":"123","endLine":45,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":47,"column":43,"nodeType":"122","messageId":"123","endLine":47,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":65,"column":26,"nodeType":"122","messageId":"123","endLine":65,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":74,"column":33,"nodeType":"122","messageId":"123","endLine":74,"endColumn":35},{"ruleId":"124","severity":1,"message":"125","line":75,"column":13,"nodeType":"126","messageId":"127","endLine":75,"endColumn":92},{"ruleId":"106","severity":1,"message":"128","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":39},{"ruleId":"106","severity":1,"message":"129","line":1,"column":41,"nodeType":"108","messageId":"109","endLine":1,"endColumn":59},{"ruleId":"124","severity":1,"message":"125","line":14,"column":13,"nodeType":"126","messageId":"127","endLine":14,"endColumn":143},{"ruleId":"120","severity":1,"message":"121","line":41,"column":52,"nodeType":"122","messageId":"123","endLine":41,"endColumn":54},{"ruleId":"120","severity":1,"message":"130","line":54,"column":64,"nodeType":"122","messageId":"123","endLine":54,"endColumn":66},{"ruleId":"131","severity":1,"message":"132","line":65,"column":60,"nodeType":"133","messageId":"134","endLine":65,"endColumn":61,"suggestions":"135"},{"ruleId":"131","severity":1,"message":"132","line":65,"column":64,"nodeType":"133","messageId":"134","endLine":65,"endColumn":65,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"132","line":65,"column":68,"nodeType":"133","messageId":"134","endLine":65,"endColumn":69,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"132","line":65,"column":72,"nodeType":"133","messageId":"134","endLine":65,"endColumn":73,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"132","line":65,"column":81,"nodeType":"133","messageId":"134","endLine":65,"endColumn":82,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"132","line":65,"column":85,"nodeType":"133","messageId":"134","endLine":65,"endColumn":86,"suggestions":"140"},{"ruleId":"120","severity":1,"message":"121","line":82,"column":69,"nodeType":"122","messageId":"123","endLine":82,"endColumn":71},{"ruleId":"120","severity":1,"message":"121","line":114,"column":36,"nodeType":"122","messageId":"123","endLine":114,"endColumn":38},{"ruleId":"120","severity":1,"message":"130","line":118,"column":36,"nodeType":"122","messageId":"123","endLine":118,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":126,"column":13,"nodeType":"126","messageId":"127","endLine":126,"endColumn":50},{"ruleId":"120","severity":1,"message":"130","line":8,"column":31,"nodeType":"122","messageId":"123","endLine":8,"endColumn":33},{"ruleId":"120","severity":1,"message":"121","line":20,"column":29,"nodeType":"122","messageId":"123","endLine":20,"endColumn":31},{"ruleId":"120","severity":1,"message":"130","line":29,"column":46,"nodeType":"122","messageId":"123","endLine":29,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":30,"column":9,"nodeType":"126","messageId":"127","endLine":30,"endColumn":67},{"ruleId":"120","severity":1,"message":"121","line":34,"column":23,"nodeType":"122","messageId":"123","endLine":34,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":11,"column":9,"nodeType":"126","messageId":"127","endLine":11,"endColumn":53},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'DraftTextEditor' is defined but never used.","'replaceAllInString' is defined but never used.","'EditorState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dialogEngine', 'onDialogChanged', 'onOptionClicked', and 'onOptionsChanged'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'props.onDialogChanged', 'props.onOptionsChanged', 'props.onProhibitSelectionStateChanged', and 'selectionProhibited'. Either include them or remove the dependency array. You can also do a functional update 'setSelectionProhibited(s => ...)' if you only need 'selectionProhibited' in the 'setSelectionProhibited' call.",["144"],"'IndentationMaster' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'getQuoteWithoutQuotationMarks' is defined but never used.","'readFromPointToDot' is defined but never used.","Expected '!==' and instead saw '!='.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["145","146"],["147","148"],["149","150"],["151","152"],["153","154"],["155","156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"messageId":"161","fix":"162","desc":"163"},{"messageId":"164","fix":"165","desc":"166"},{"messageId":"161","fix":"167","desc":"163"},{"messageId":"164","fix":"168","desc":"166"},{"messageId":"161","fix":"169","desc":"163"},{"messageId":"164","fix":"170","desc":"166"},{"messageId":"161","fix":"171","desc":"163"},{"messageId":"164","fix":"172","desc":"166"},{"messageId":"161","fix":"173","desc":"163"},{"messageId":"164","fix":"174","desc":"166"},{"messageId":"161","fix":"175","desc":"163"},{"messageId":"164","fix":"176","desc":"166"},"Update the dependencies array to be: [dialogEngine, onDialogChanged, onOptionClicked, onOptionsChanged]",{"range":"177","text":"178"},"Update the dependencies array to be: [props.onDialogChanged, props.onOptionsChanged, props.onProhibitSelectionStateChanged, selectionProhibited]",{"range":"179","text":"180"},"removeEscape",{"range":"181","text":"182"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"183","text":"184"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"185","text":"182"},{"range":"186","text":"184"},{"range":"187","text":"182"},{"range":"188","text":"184"},{"range":"189","text":"182"},{"range":"190","text":"184"},{"range":"191","text":"182"},{"range":"192","text":"184"},{"range":"193","text":"182"},{"range":"194","text":"184"},[1206,1208],"[dialogEngine, onDialogChanged, onOptionClicked, onOptionsChanged]",[606,608],"[props.onDialogChanged, props.onOptionsChanged, props.onProhibitSelectionStateChanged, selectionProhibited]",[2629,2630],"",[2629,2629],"\\",[2633,2634],[2633,2633],[2637,2638],[2637,2637],[2641,2642],[2641,2641],[2650,2651],[2650,2650],[2654,2655],[2654,2654]]