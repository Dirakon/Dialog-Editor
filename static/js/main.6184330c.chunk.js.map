{"version":3,"sources":["DialogAnalyzer.js","components/draftTextEditor.js","App.js","reportWebVitals.js","index.js"],"names":["DialogAnalyzer","props","this","EXIT","DUNFORGET","REMEMBER","ADDTAG","VAR","ELSE","HASTAG","UP","DELETETAG","code","split","curLine","tags","vars","saves","found","length","charId","process","alert","operation","context","needsToExit","sign","readFromPointToDot","line","str","variable","i","amount","parseInt","pass","maxIndentationLevel","seekingForElse","tag","options","text","loadedSaveLine","saveWhat","saveWhere","num","discussedLine","indentationLevel","lch","minIndentationLevel","newOption","push","console","log","txt","opResult","executeAnOperation","option","ans","quotes","stateFromHTML","require","DraftTextEditor","state","editorState","EditorState","createWithText","sampleDialog","focus","refs","editor","onChange","setState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","contentState","createWithContent","editorCore","document","querySelector","movingAllowed","divider","addEventListener","event","style","width","clientX","toString","setupDraggableBar","button","theDraftTextEditor","dialoger","previousOptions","updateIt","remove","getOptions","undefined","papa","getElementsByClassName","element","createElement","innerHTML","remOption","chooseOption","appendChild","getText","compile","getCurrentContent","getPlainText","command","newState","RichUtils","e","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","className","hasText","getBlockMap","first","getType","onToggle","onClick","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","placeholder","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","type","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","App","useEffect","title","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.6184330c.chunk.js","sourcesContent":["class DialogAnalyzer {\n    constructor(props) {\n        // OPERATIONS:\n        this.EXIT = \"exit\";\n        this.DUNFORGET = \"save\";\n        this.REMEMBER = \"load\";\n        this.ADDTAG = \"addTag\";\n        this.VAR = \"var\";\n        this.ELSE = \"else\";\n        this.HASTAG = \"hasTag\";\n        this.UP = \"up\";\n        this.DELETETAG = \"deleteTag\";\n    }\n\n    compile(code) {\n        this.code = code.split('\u0001');\n        this.curLine = 0;\n        this.tags = {};\n        this.vars = {};\n        this.saves = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; // 10 saves\n        let found = false;\n        for (; this.curLine < this.code.length; ++this.curLine) {\n            for (let charId = 0; charId < this.code[this.curLine].length; ++charId) {\n                if (this.code[this.curLine][charId] === '(') {\n                    found = true;\n                    break;\n                }\n\n            }\n            if (found) {\n                break;\n            }\n        }\n        if (!found) {\n            //Did not found the first left bracket...\n            alert(\"You are missing the first left bracket! Code is incorrect.\")\n            return\n        }\n        this.process(this.curLine);\n    }\n\n    executeAnOperation(operation, charId, context) {\n        let needsToExit = false;\n        switch (operation) {\n            case (this.VAR): {        //Working with variables\n                let sign = this.readFromPointToDot(this.code[context.line], charId);\n                charId = sign.charId;\n                sign = sign.str;\n                let variable = \"\"\n                for (let i = 1; i < sign.length - 1; ++i) {\n                    variable += sign[i];\n                }\n                sign = this.readFromPointToDot(this.code[context.line], charId);\n                charId = sign.charId;\n                sign = sign.str;\n                let amount = this.readFromPointToDot(this.code[context.line], charId);\n                charId = amount.charId;\n                amount = parseInt(amount.str);\n                if (sign === \"=\") {\n                    this.vars[variable] = amount;\n                } else if (sign === \"+=\") {\n                    this.vars[variable] += amount;\n                } else {\n                    let pass = false;\n                    if (sign === \"==\") {\n                        pass = this.vars[variable] === amount;\n                    } else if (sign === \">=\") {\n                        pass = this.vars[variable] >= amount;\n                    } else if (sign === \"!=\") {\n                        pass = this.vars[variable] !== amount;\n                    } else if (sign === \"<=\") {\n                        pass = this.vars[variable] <= amount;\n                    } else if (sign === \"<\") {\n                        pass = this.vars[variable] < amount;\n                    } else if (sign === \">\") {\n                        pass = this.vars[variable] < amount;\n                    }\n                    if (pass) {\n                        context.maxIndentationLevel++;\n                    } else {\n                        context.seekingForElse = -2;\n                    }\n                }\n            }\n                break;\n            case this.ADDTAG: {\n                let tag = this.readFromPointToDot(this.code[context.line], charId);\n                charId = tag.charId;\n                tag = tag.str;\n                this.tags[tag] = true;\n            }\n                break;\n            case this.DELETETAG: {\n                let tag = this.readFromPointToDot(this.code[context.line], charId);\n                charId = tag.charId;\n                tag = tag.str;\n                this.tags[tag] = false;\n            }\n                break;\n            case this.HASTAG: {\n                let tag = this.readFromPointToDot(this.code[context.line], charId);\n                charId = tag.charId;\n                tag = tag.str;\n                if (!(tag in this.tags) || this.tags[tag] === false) {\n                    context.seekingForElse = -2;\n                } else {\n                    context.maxIndentationLevel++;\n                }\n            }\n                break;\n            case this.ELSE: {\n                if (context.seekingForElse > -1) {\n                    context.seekingForElse = -1;\n                    context.maxIndentationLevel++;\n                }\n            }\n                break;\n            case this.EXIT: {//Exit the dialog operation.\n                this.options = [];\n                this.text = \"--EXITED THE DIALOG--\";\n                needsToExit = true\n            }\n                break;\n            case this.REMEMBER: {  //Load some point\n                let loadedSaveLine = this.readFromPointToDot(this.code[context.line], charId).str;\n                this.process(this.saves[parseInt(loadedSaveLine)]);\n                needsToExit = true\n            }\n                break;\n            case this.DUNFORGET: { //Save some point\n                let saveWhat = this.readFromPointToDot(this.code[context.line], charId);  // 0 - str, 1 - charId\n                charId = saveWhat.charId;\n                saveWhat = parseInt(saveWhat.str);\n                let saveWhere = this.readFromPointToDot(this.code[context.line], charId);  // 0 - str, 1 - charId\n                charId = saveWhere.charId;\n                saveWhere = parseInt(saveWhere.str);\n                this.saves[saveWhere] = saveWhat + 1 + context.line;\n            }\n                break;\n            case this.UP: {\n                let num = this.readFromPointToDot(this.code[context.line], charId);\n                charId = num.charId;\n                num = parseInt(num.str)\n                let discussedLine = context.line - 1;\n                context.indentationLevel = -1;\n                while (context.indentationLevel !== num) {\n                    for (let lch = 0; lch < this.code[discussedLine].length; ++lch) {\n                        if (this.code[discussedLine][lch] === ' ' || this.code[discussedLine][lch] === '\\t' || this.code[discussedLine][lch] === '\\n') {\n                            continue;\n                        }\n                        if (this.code[discussedLine][lch] === '(') {\n                            context.indentationLevel++;\n                        } else if (this.code[discussedLine][lch] === ')') {\n                            context.indentationLevel--;\n                        } else {\n                            break;\n                        }\n                    }\n                    discussedLine--;\n                }\n                this.process(discussedLine + 1);\n                needsToExit = true;\n            }\n                break;\n        }\n        return { needsToExit: needsToExit, charId: charId }\n    }\n\n    process(line) {\n        this.text = \"\";\n        this.options = [];\n        let context = {}\n        context.line = ++line;\n        context.indentationLevel = 1\n        context.minIndentationLevel = 1\n        context.maxIndentationLevel = 1;\n        context.seekingForElse = -1;\n        while (context.indentationLevel !== 0) {\n            if (context.seekingForElse > -1) {\n                context.seekingForElse--;\n            }\n            let charId = 0;\n            while (charId < this.code[context.line].length) {\n                if (this.code[context.line][charId] === '(') { //Visibility change\n                    context.indentationLevel++;\n                } else if (this.code[context.line][charId] === ')') {   //Visibility change\n                    if (context.maxIndentationLevel !== 1 && ((context.indentationLevel < context.minIndentationLevel || context.indentationLevel > context.maxIndentationLevel)) === false) {\n                        context.maxIndentationLevel--;\n                    } else if (context.seekingForElse === -2 && (context.indentationLevel < context.minIndentationLevel || context.indentationLevel > context.maxIndentationLevel) === true) {\n                        context.seekingForElse = 2;\n                    }\n                    context.indentationLevel--;\n                } else if (context.indentationLevel < context.minIndentationLevel || context.indentationLevel > context.maxIndentationLevel) {   //Out of our visibility\n                    ++charId;\n                    continue;\n                } else if (this.code[context.line][charId] === '\\\\') {   //Option\n                    charId++;\n                    let newOption = \"\";\n                    for (let lch = charId; lch < this.code[context.line].length; ++lch) {\n                        if (this.code[context.line][lch] === '/') {\n                            break;\n                        }\n                        newOption += this.code[context.line][lch];\n                    }\n                    this.options.push([newOption, context.line + 1])\n                    break;\n                } else if (this.code[context.line][charId] === ':') {   //Some operation\n                    charId++;\n                    let operation = this.readFromPointToDot(this.code[context.line], charId);\n                    charId = operation.charId;\n                    console.log(operation)\n                    operation = operation.str;\n                    if (operation[0] === '\"') {//That's THE text\n                        let txt = \"\";\n                        for (let i = 1; i < operation.length - 1; ++i) {\n                            txt += operation[i];\n                        }\n                        this.text = txt;\n                    }\n                    else {\n                        let opResult = this.executeAnOperation(operation, charId, context)\n                        if (opResult.needsToExit == true) {\n                            return opResult.charId;\n                        }\n                        charId = opResult.charId;\n                    }\n                    break;\n                }\n                ++charId;\n            }\n            ++context.line;\n        }\n    }\n\n    getText() {\n        return this.text;\n    }\n\n    getOptions() {  // [options] where one option is [string, lineNum]\n        return this.options;\n    }\n\n    chooseOption(option) {\n        this.curLine = option[1];\n        this.process(this.curLine);\n    }\n\n    readFromPointToDot(line, charId) {    //Returns {str:string we were looking for, charId: new char id}\n        let ans = \"\";\n        let quotes = false;\n        while (charId < line.length) {\n            if (line[charId] === '\"') {\n                quotes = !quotes;\n            }\n            if (quotes) {\n                if (line[charId] === '\\\\' && line.length - 1 !== charId && line[charId + 1] === 'n') { //New line when writing dialogs\n                    charId += 2;\n                    ans += '<br>';\n                    continue;\n                }\n            } else if (line[charId] === '.') {\n                return { str: ans, charId: charId + 1 };\n            }\n            ans += line[charId];\n            ++charId;\n        }\n        return { str: ans, charId: charId + 1 }\n    }\n\n\n}\n\nexport default DialogAnalyzer;\n","import React, { useEffect } from 'react';\nimport { Editor, EditorState, getDefaultKeyBinding, RichUtils } from 'draft-js';\nimport './RichText.css'\nimport DialogAnalyzer from '../DialogAnalyzer'\nconst stateFromHTML = require('draft-js-import-html').stateFromHTML;\n\n\nclass DraftTextEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { editorState: EditorState.createWithText(sampleDialog) };\n\n        this.focus = () => this.refs.editor.focus();\n        this.onChange = (editorState) => this.setState({ editorState });\n\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\n        this.toggleBlockType = this._toggleBlockType.bind(this);\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\n    }\n\n    getInitialState() {\n        let contentState = stateFromHTML('<p>Hello</p>');\n        return {\n            editorState: EditorState.createWithContent(contentState)\n        };\n    }\n    setupDraggableBar() {\n        const editorCore = document.querySelector('.RichEditor-root')\n        let movingAllowed = false;\n        const divider = document.querySelector(\".DIVIDER\")\n        divider.addEventListener(\"mousedown\", function (event) {\n            movingAllowed = true;\n        }, false);\n        divider.addEventListener(\"mouseup\", function (event) {\n            movingAllowed = false;\n        }, false);\n        document.addEventListener(\"mousemove\", function (event) {\n            if (movingAllowed) {\n                editorCore.style.width = (event.clientX - 32).toString() + 'px';\n            }\n        }, false);\n    }\n    componentDidMount() {\n        this.setupDraggableBar()\n\n        const button = document.querySelector('.compiler');\n        let theDraftTextEditor = this;\n        const dialoger = new DialogAnalyzer();\n        let previousOptions = [];\n        const updateIt = function () {\n            for (let i = 0; i < previousOptions.length; ++i) {\n                previousOptions[i].remove();\n            }\n            previousOptions = [];\n            let options = dialoger.getOptions();\n            if (options === undefined)\n                return\n            let papa = document.getElementsByClassName(\"dialogSide\")[0]\n            for (let i = 0; i < options.length; ++i) {\n                let element = document.createElement(\"button\");\n                element.innerHTML = options[i][0];\n                const remOption = options[i];\n                element.addEventListener(\"click\", function () {\n                    dialoger.chooseOption(remOption);\n                    updateIt();\n                })\n                previousOptions.push(element);\n                papa.appendChild(element);\n            }\n            document.querySelector('.actualDialog').innerHTML = dialoger.getText();\n        }\n        button.addEventListener(\"click\", function () {\n            dialoger.compile(theDraftTextEditor.state.editorState.getCurrentContent().getPlainText('\\u0001'))\n            updateIt();\n        });\n\n    }\n\n    _handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState);\n            return true;\n        }\n        return false;\n    }\n\n    _mapKeyToEditorCommand(e) {\n        if (e.keyCode === 9 /* TAB */) {\n            const newEditorState = RichUtils.onTab(\n                e,\n                this.state.editorState,\n                4, /* maxDepth */\n            );\n            if (newEditorState !== this.state.editorState) {\n                this.onChange(newEditorState);\n            }\n            return;\n        }\n        return getDefaultKeyBinding(e);\n    }\n\n    _toggleBlockType(blockType) {\n        this.onChange(\n            RichUtils.toggleBlockType(\n                this.state.editorState,\n                blockType\n            )\n        );\n    }\n\n    _toggleInlineStyle(inlineStyle) {\n        this.onChange(\n            RichUtils.toggleInlineStyle(\n                this.state.editorState,\n                inlineStyle\n            )\n        );\n    }\n\n    render() {\n        const { editorState } = this.state;\n\n        // If the user changes block type before entering any text, we can\n        // either style the placeholder or hide it. Let's just hide it now.\n        let className = 'RichEditor-editor';\n        var contentState = editorState.getCurrentContent();\n        if (!contentState.hasText()) {\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n                className += ' RichEditor-hidePlaceholder';\n            }\n        }\n\n        return (\n            <div className=\"RichEditor-root\">\n                <BlockStyleControls\n                    editorState={editorState}\n                    onToggle={this.toggleBlockType}\n                />\n                <InlineStyleControls\n                    editorState={editorState}\n                    onToggle={this.toggleInlineStyle}\n                />\n                <div className={className} onClick={this.focus}>\n                    <Editor\n                        blockStyleFn={getBlockStyle}\n                        customStyleMap={styleMap}\n                        editorState={editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        keyBindingFn={this.mapKeyToEditorCommand}\n                        onChange={this.onChange}\n                        placeholder=\"Tell a story...\"\n                        ref=\"editor\"\n                        spellCheck={true}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n    CODE: {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 16,\n        padding: 2,\n    },\n};\n\nfunction getBlockStyle(block) {\n    switch (block.getType()) {\n        case 'blockquote':\n            return 'RichEditor-blockquote';\n        default:\n            return null;\n    }\n}\n\nclass StyleButton extends React.Component {\n    constructor() {\n        super();\n        this.onToggle = (e) => {\n            e.preventDefault();\n            this.props.onToggle(this.props.style);\n        };\n    }\n\n    render() {\n        let className = 'RichEditor-styleButton';\n        if (this.props.active) {\n            className += ' RichEditor-activeButton';\n        }\n\n        return (\n            <span className={className} onMouseDown={this.onToggle}>\n                {this.props.label}\n            </span>\n        );\n    }\n}\n\nconst BLOCK_TYPES = [\n];\n\nconst BlockStyleControls = (props) => {\n    const { editorState } = props;\n    const selection = editorState.getSelection();\n    const blockType = editorState\n        .getCurrentContent()\n        .getBlockForKey(selection.getStartKey())\n        .getType();\n\n    return (\n        <div className=\"RichEditor-controls\">\n            {BLOCK_TYPES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={type.style === blockType}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\nvar INLINE_STYLES = [\n];\n\nconst InlineStyleControls = (props) => {\n    const currentStyle = props.editorState.getCurrentInlineStyle();\n\n    return (\n        <div className=\"RichEditor-controls\">\n            {INLINE_STYLES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={currentStyle.has(type.style)}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\nconst sampleDialog = `\n\\t//What you see now is an example dialog!\n\n(\n\n\\t:\"Good day, sir actor!\"\n\\t\\\\\"Where am I?\"/\n\\t(\n\\t\\t:\"I would say that you are in the theatre. You won't hear more from me.\"\n\\t\\t\\\\\"...\"/\n\\t\\t(\n\\t\\t\\t:load.0\n\\t\\t)\n\\t)\n\\t\\\\\"Who am I?\"/\n\\t(\n\\t\\t:\"I already said that you, mister actor, are an actor. Why would you want to know more?\"\n\\t\\t\\\\\"...\"/\n\\t\\t(\n\\t\\t\\t:load.0\n\\t\\t)\n\\t)\n\\t\\\\\"Who are you?\"/\n\\t(\n\\t\\t:\"Wow, that's an interesting question... I'm the owner of this theatre. My name will be a mystery for now.\"\n\\t\\t\\\\\"...\"/\n\\t\\t(\n\\t\\t\\t:load.0\n\\t\\t)\n\\t)\n\\t\\\\\"Where is the exit here?\"/\n\\t(\n\\t\\t:\"There, first turn left.\"\n\\t\\t\\\\\"Thanks, now I will go\"/\n\\t\\t(\n\\t\\t\\t:exit\n\\t\\t)\n\\t\\t\\\\\"Alright, I'll remember that. You can continue now\"/\n\\t\\t(\n\\t\\t\\t:load.0\n\\t\\t)\n\\t)\n\\t:save.1.0\n\\t\\\\\"...\"/\n\\t(\n\\t\\t:\"Who do you want to play? I see real talent in you.\"\n\\t\\t:var.\"jobs\".=.0\n\\t\\t:hasTag.\"nonAustro\"\n\\t\\t(\n\\t\\t\\t:var.\"jobs\".+=.1\n\\t\\t)\n\\t\\t:else\n\\t\\t(\n\\t\\t\\\\\"I wouldn't mind being an astronaut\"/\n\\t\\t(\n\\t\\t\\t:\"I'm sorry but that role is already taken.\"\n\\t\\t\\t\\\\\"...\"/\n\\t\\t\\t(\n\\t\\t\\t\\t:addTag.\"nonAustro\"\n\\t\\t\\t\\t:up.3\n\\t\\t\\t)\n\\t\\t)\n\\t\\t)\n\\t\\t\n\\t\\t:hasTag.\"nonDragon\"\n\\t\\t(\n\\t\\t\\t:var.\"jobs\".+=.1\n\\t\\t)\n\\t\\t:else\n\\t\\t(\n\\t\\t\\\\\"Fantasy dragon please!\"/\n\\t\\t(\n\\t\\t\\t:\"I'm sorry but that role is already taken.\"\n\\t\\t\\t\\\\\"...\"/\n\\t\\t\\t(\n\\t\\t\\t\\t:addTag.\"nonDragon\"\n\\t\\t\\t\\t:up.3\n\\t\\t\\t)\n\\t\\t)\n\\t\\t)\n\\t\\t:hasTag.\"nonDetective\"\n\\t\\t(\n\\t\\t\\t:var.\"jobs\".+=.1\n\\t\\t)\n\\t\\t:else\n\\t\\t(\n\\t\\t\\\\\"I would like to play detective!\"/\n\\t\\t(\n\\t\\t\\t:\"I'm sorry but that role is already taken.\"\n\\t\\t\\t\\\\\"...\"/\n\\t\\t\\t(\n\\t\\t\\t\\t:addTag.\"nonDetective\"\n\\t\\t\\t\\t:up.3\n\\t\\t\\t)\n\\t\\t)\n\\t\\t)\n\\t\\t:var.\"jobs\".==.3\n\\t\\t(\n\\t\\t\\t\\\\\"WHO CAN I EVEN PLAY!?\"/\n\\t\\t\\t(\n\\t\\t\\t\\t:\"Hmmm... Let me check...\"\n\\t\\t\\t\\t\\t\\\\\"...\"/\n\\t\\t\\t\\t\\t(\n\\t\\t\\t\\t\\t\\t:\"Yes, I'm very sorry... Apparently, only one role is vacant...\"\n\\t\\t\\t\\t\\t\\t\\\\\"Which one???\"/\n\\t\\t\\t\\t\\t\\t(\n\\t\\t\\t\\t\\t\\t\\t:load.0\n\\t\\t\\t\\t\\t\\t)\n\\t\\t\\t\\t\\t\\t\\\\\"Tell me!\"/\n\\t\\t\\t\\t\\t\\t(\n\\t\\t\\t\\t\\t\\t\\t:load.0\n\\t\\t\\t\\t\\t\\t)\n\\t\\t\\t\\t\\t\\t:save.1.0\n\\t\\t\\t\\t\\t\\t\\\\\"Speak!!!\"/\n\\t\\t\\t\\t\\t\\t(\n\\t\\t\\t\\t\\t\\t\\t:\"Yes... A simple man.\"\n\\t\\t\\t\\t\\t\\t\\t\\t\\\\\"Huh?\"/\n\\t\\t\\t\\t\\t\\t\\t\\t(\n\\t\\t\\t//The game start here...\n\n:\"You wake up in your bed and stare into the rotten ceiling.\"\n\\\\I want to sleep just a little bit more.../\n(\n\\t:\"Unfortunately, you still have to wake up.\"\n\\t\\\\What a shame.../\n\\t(\n\\t\\t:up.2\n\\t)\n)\n\\\\\"What time is it?\"/\n(\n\\t:\" - you ask... You can't really hear an answer though.\"\n\\t\\\\I will tell them.../\n\\t(\n\\t\\t:up.2\n\\t)\n)\n\\\\Time to rise from the bed.../\n(\n\\t:exit\n)\n\\t\\t\\t//The game ends here...\n\\t\\t\\t\\t\\t\\t\\t\\t)\n\\t\\t\\t\\t\\t\\t)\n\\t\\t\\t\\t\\t)\n\\t\\t\\t)\n\\t\\t)\n\\t)\n)`\nexport default DraftTextEditor;\n","import React, {useEffect} from 'react';\nimport DraftTextEditor from './components/draftTextEditor'\n\n\nfunction App() {\n    useEffect(() => {\n        document.title = \"Dialog Editor\"\n    }, []);\n    return (\n        <div className=\"App\" style={{height : '100%'}}>\n            <div style ={{height:'100%'}}>\n                <div className={'flexer'}>\n                    <DraftTextEditor/>\n                    <div className={'DIVIDER'}>\n                    </div>\n                    <div className={ 'dialogSide'}>\n                        <div className={'actualDialog'}>\n                        Dialog will be visible here!\n                        </div>\n                    </div>\n                </div>\n\n                <button className={'compiler'}> Compile!</button>\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\nclass MyEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {editorState: EditorState.createEmpty()};\n        this.onChange = editorState => this.setState({editorState});\n    }\n\n\n    render() {\n        return (\n            <Editor editorState={this.state.editorState} onChange={this.onChange} />\n        );\n    }\n}\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n//ReactDOM.render(<React.StrictMode><MyEditor /></React.StrictMode>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}